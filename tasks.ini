[+]
build_type=Release
build_target=main
build_dir=build
build_generator=Ninja
run_environ=
run_target="$(VIM:build_dir)/$(VIM:build_target)"
build_options=--parallel
build_configs=
pre_build_cmd=

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2

[file-build]
command:c,cpp=gcc -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3 --std=c++17
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2

command=$(VIM:pre_build_cmd) cmake -G "$(VIM:build_generator)" 
 -DCMAKE_BUILD_TYPE="$(VIM:build_type)" $(VIM:build_configs) 


[project-init]
command=mkdir build && cd build && cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=1
cwd=<root>
errorformat=

[project-build]
command=cmake -B "$(VIM:build_dir)" -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DCMAKE_BUILD_TYPE="$(VIM:build_type)" && cmake --build "$(VIM:build_dir)"  --target "$(VIM:build_target)" --config "$(VIM:build_type)" $(VIM:build_options)
cwd=$(VIM_ROOT)
output=terminal

[project-run]
command=build/$(VIM_PRONAME)
cwd=<root>
output=terminal
